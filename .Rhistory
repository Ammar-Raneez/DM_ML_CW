set.seed(seed)
predictions = c()
# best performing neural net internal structure for 2 hidden layers
for (i in 1:100) {
input_vector <- data.frame(scaled_exchange_data$date)
input_vector <- data.frame(input_vector[((400 - order) + i) : (400 + i)])
nn_trial.prediction <- predict(nn_trial, input_vector)
predictions <- c(predictions, nn_trial.prediction)
}
predictions_df <- data.frame(test[, 1], predictions)
predictions_df <- head(predictions_df, 100)
rmse_nn_trial <- round(rmse(test[, 2], predictions_df[, 2]), digits = 4)
mae_nn_trial <- round(mae(test[, 2], predictions_df[, 2]), digits = 4)
mape_nn_trial <- round(mape(test[, 2], predictions_df[, 2]), digits = 4)
return(c(rmse_nn_trial, mae_nn_trial, mape_nn_trial))
}
# find best order of AR for these optimal values
perform_neuralnet_ar_change_two <- function(seed, order) {
predictions = c()
for (i in 1:100) {
input_vector <- data.frame(scaled_exchange_data$date)
input_vector <- data.frame(input_vector[((400 - order) + i) : (400 + i)])
nn_trial.prediction <- predict(nn_trial, input_vector)
predictions <- c(predictions, nn_trial.prediction)
}
predictions_df <- data.frame(test[, 1], predictions)
predictions_df <- head(predictions_df, 100)
rmse_nn_trial <- round(rmse(test[, 2], predictions_df[, 2]), digits = 4)
mae_nn_trial <- round(mae(test[, 2], predictions_df[, 2]), digits = 4)
mape_nn_trial <- round(mape(test[, 2], predictions_df[, 2]), digits = 4)
return(c(rmse_nn_trial, mae_nn_trial, mape_nn_trial))
}
zzz <- perform_neuralnet_ar_change_two(104, 2)
# find best order of AR for these optimal values
perform_neuralnet_ar_change_two <- function(seed, order) {
predictions = c()
for (i in 1:100) {
input_vector <- data.frame(scaled_exchange_data$date)
input_vector <- data.frame(input_vector[((400 - order) + i) : (400 + i)],)
nn_trial.prediction <- predict(nn_trial, input_vector)
predictions <- c(predictions, nn_trial.prediction)
}
predictions_df <- data.frame(test[, 1], predictions)
predictions_df <- head(predictions_df, 100)
rmse_nn_trial <- round(rmse(test[, 2], predictions_df[, 2]), digits = 4)
mae_nn_trial <- round(mae(test[, 2], predictions_df[, 2]), digits = 4)
mape_nn_trial <- round(mape(test[, 2], predictions_df[, 2]), digits = 4)
return(c(rmse_nn_trial, mae_nn_trial, mape_nn_trial))
}
zzz <- perform_neuralnet_ar_change_two(104, 2)
# find best order of AR for these optimal values
perform_neuralnet_ar_change_two <- function(seed, order) {
predictions = c()
for (i in 1:100) {
input_vector <- data.frame(scaled_exchange_data$date)
input_vector <- data.frame(input_vector[((400 - order) + i) : (400 + i), ])
nn_trial.prediction <- predict(nn_trial, input_vector)
predictions <- c(predictions, nn_trial.prediction)
}
predictions_df <- data.frame(test[, 1], predictions)
predictions_df <- head(predictions_df, 100)
rmse_nn_trial <- round(rmse(test[, 2], predictions_df[, 2]), digits = 4)
mae_nn_trial <- round(mae(test[, 2], predictions_df[, 2]), digits = 4)
mape_nn_trial <- round(mape(test[, 2], predictions_df[, 2]), digits = 4)
return(c(rmse_nn_trial, mae_nn_trial, mape_nn_trial))
}
zzz <- perform_neuralnet_ar_change_two(104, 2)
x <- x[((400 - 1) + 1) : (400 + 1)]
x <- x[((400 - 1) + 1) : (400 + 1),]
zzz <- perform_neuralnet_ar_change_two(104, 2)
x <- data.frame(scaled_exchange_data$date)
x <- data.frame(x[((400 - 1) + 1) : (400 + 1)])
x <- data.frame(x[((400 - 1) + 1) : (400 + 1)],)
x <- data.frame(x[((400 - 1) + 1) : (400 + 1),])
View(x)
View(scaled_exchange_data)
perform_neuralnet_ar_change_two <- function(seed, order) {
predictions = c()
for (i in 1:100) {
input_vector <- data.frame(scaled_exchange_data$date)
input_vector <- data.frame(input_vector[((400 - order) + i) : ((400 + 1) - 1), ])
nn_trial.prediction <- predict(nn_trial, input_vector)
predictions <- c(predictions, nn_trial.prediction)
}
predictions_df <- data.frame(test[, 1], predictions)
predictions_df <- head(predictions_df, 100)
rmse_nn_trial <- round(rmse(test[, 2], predictions_df[, 2]), digits = 4)
mae_nn_trial <- round(mae(test[, 2], predictions_df[, 2]), digits = 4)
mape_nn_trial <- round(mape(test[, 2], predictions_df[, 2]), digits = 4)
return(c(rmse_nn_trial, mae_nn_trial, mape_nn_trial))
}
perform_neuralnet_ar_change_two <- function(seed, order) {
predictions = c()
for (i in 1:100) {
input_vector <- data.frame(scaled_exchange_data$date)
input_vector <- data.frame(input_vector[((400 - order) + i) : ((400 + 1) - 1), ])
nn_trial.prediction <- predict(nn_trial, input_vector)
predictions <- c(predictions, nn_trial.prediction)
}
predictions_df <- data.frame(test[, 1], predictions)
#predictions_df <- head(predictions_df, 100)
rmse_nn_trial <- round(rmse(test[, 2], predictions_df[, 2]), digits = 4)
mae_nn_trial <- round(mae(test[, 2], predictions_df[, 2]), digits = 4)
mape_nn_trial <- round(mape(test[, 2], predictions_df[, 2]), digits = 4)
return(c(rmse_nn_trial, mae_nn_trial, mape_nn_trial))
}
zzz <- perform_neuralnet_ar_change_two(104, 2)
perform_neuralnet_ar_change_two <- function(seed, order) {
predictions = c()
for (i in 1:100) {
input_vector <- data.frame(scaled_exchange_data$date)
input_vector <- data.frame(input_vector[((400 - order) + i) : ((400 + 1) - 1), ])
nn_trial.prediction <- predict(nn_trial, input_vector)
predictions <- c(predictions, nn_trial.prediction)
}
predictions_df <- data.frame(test[, 1], predictions)
#predictions_df <- head(predictions_df, 100)
rmse_nn_trial <- round(rmse(test[, 2], predictions_df[, 2]), digits = 4)
mae_nn_trial <- round(mae(test[, 2], predictions_df[, 2]), digits = 4)
mape_nn_trial <- round(mape(test[, 2], predictions_df[, 2]), digits = 4)
return(c(rmse_nn_trial, mae_nn_trial, mape_nn_trial))
}
zzz <- perform_neuralnet_ar_change_two(104, 1)
perform_neuralnet_ar_change_two <- function(seed, order) {
predictions = c()
for (i in 1:100) {
input_vector <- data.frame(scaled_exchange_data$date)
input_vector <- data.frame(input_vector[((400 - order) + i) : ((400 + i) - 1), ])
nn_trial.prediction <- predict(nn_trial, input_vector)
predictions <- c(predictions, nn_trial.prediction)
}
predictions_df <- data.frame(test[, 1], predictions)
#predictions_df <- head(predictions_df, 100)
rmse_nn_trial <- round(rmse(test[, 2], predictions_df[, 2]), digits = 4)
mae_nn_trial <- round(mae(test[, 2], predictions_df[, 2]), digits = 4)
mape_nn_trial <- round(mape(test[, 2], predictions_df[, 2]), digits = 4)
return(c(rmse_nn_trial, mae_nn_trial, mape_nn_trial))
}
zzz <- perform_neuralnet_ar_change_two(104, 1)
zzz <- perform_neuralnet_ar_change_two(104, 2)
perform_neuralnet_ar_change_two <- function(seed, order) {
predictions = c()
for (i in 1:100) {
input_vector <- data.frame(scaled_exchange_data$date)
input_vector <- data.frame(input_vector[((400 - order) + i) : ((400 + i) - 1), ])
nn_trial.prediction <- predict(nn_trial, input_vector)
predictions <- c(predictions, nn_trial.prediction)
}
predictions_df <- data.frame(test[, 1], predictions)
#predictions_df <- head(predictions_df, 100)
rmse_nn_trial <- round(rmse(test[, 2], predictions_df[, 2]), digits = 4)
mae_nn_trial <- round(mae(test[, 2], predictions_df[, 2]), digits = 4)
mape_nn_trial <- round(mape(test[, 2], predictions_df[, 2]), digits = 4)
return(c(rmse_nn_trial, mae_nn_trial, mape_nn_trial))
}
zzz <- perform_neuralnet_ar_change_two(104, 2)
View(predictions_df)
library(readxl)
library(neuralnet)
library(fpp2)
library(ggplot2)
library(Metrics)
exchange_data <- read_excel("../../ExchangeUSD.xlsx")
# remove second unneeded column
exchange_data <- exchange_data[c(-2)]
# convert date into time series
exchange_data <- ts(exchange_data)
exchange_data <- as.data.frame(exchange_data)
# rename col names for easiness
colnames(exchange_data) <- c("date", "rate")
# scale the exchange rates
maxs <- apply(exchange_data, 2, max)
mins <- apply(exchange_data, 2, min)
scaled_exchange_data <- as.data.frame(scale(exchange_data, center = mins, scale = maxs - mins))
# split into training and test
train <- scaled_exchange_data[0:400,]
test <- scaled_exchange_data[401:500,]
# find best order of AR for these optimal values
set.seed(104)
# best performing neural net internal structure for 2 hidden layers
nn_trial <- neuralnet(rate ~ date, data = train, hidden = c(6, 6), act.fct = "logistic", err.fct = "sse", lifesign = "full", learningrate = 0.08, rep = 10, linear.output = T)
perform_neuralnet_ar_change_two <- function(seed, order) {
predictions = c()
for (i in 1:100) {
input_vector <- data.frame(scaled_exchange_data$date)
input_vector <- data.frame(input_vector[((400 - order) + i) : ((400 + i) - 1), ])
nn_trial.prediction <- predict(nn_trial, input_vector)
predictions <- c(predictions, nn_trial.prediction)
}
predictions_df <- data.frame(test[, 1], predictions)
#predictions_df <- head(predictions_df, 100)
rmse_nn_trial <- round(rmse(test[, 2], predictions_df[, 2]), digits = 4)
mae_nn_trial <- round(mae(test[, 2], predictions_df[, 2]), digits = 4)
mape_nn_trial <- round(mape(test[, 2], predictions_df[, 2]), digits = 4)
return(c(rmse_nn_trial, mae_nn_trial, mape_nn_trial))
}
zzz <- perform_neuralnet_ar_change_two(104, 2)
perform_neuralnet_ar_change_two <- function(seed, order) {
predictions = c()
for (i in 1:100) {
input_vector <- data.frame(scaled_exchange_data$date)
input_vector <- data.frame(input_vector[((400 - order) + i) : ((400 + i) - 1), ])
nn_trial.prediction <- predict(nn_trial, input_vector)
predictions <- c(predictions, nn_trial.prediction)
}
predictions_df <- data.frame(test[, 1], predictions)
print(predictions_df)
#predictions_df <- head(predictions_df, 100)
rmse_nn_trial <- round(rmse(test[, 2], predictions_df[, 2]), digits = 4)
mae_nn_trial <- round(mae(test[, 2], predictions_df[, 2]), digits = 4)
mape_nn_trial <- round(mape(test[, 2], predictions_df[, 2]), digits = 4)
return(c(rmse_nn_trial, mae_nn_trial, mape_nn_trial))
}
zzz <- perform_neuralnet_ar_change_two(104, 2)
perform_neuralnet_ar_change_two <- function(seed, order) {
predictions = c()
for (i in 1:100) {
input_vector <- data.frame(scaled_exchange_data$date)
input_vector <- data.frame(input_vector[((400 - order) + i) : ((400 + i) - 1), ])
nn_trial.prediction <- predict(nn_trial, input_vector)
predictions <- c(predictions, nn_trial.prediction)
}
print(predictions)
predictions_df <- data.frame(test[, 1], predictions)
#predictions_df <- head(predictions_df, 100)
rmse_nn_trial <- round(rmse(test[, 2], predictions_df[, 2]), digits = 4)
mae_nn_trial <- round(mae(test[, 2], predictions_df[, 2]), digits = 4)
mape_nn_trial <- round(mape(test[, 2], predictions_df[, 2]), digits = 4)
return(c(rmse_nn_trial, mae_nn_trial, mape_nn_trial))
}
zzz <- perform_neuralnet_ar_change_two(104, 2)
perform_neuralnet_ar_change_two <- function(seed, order) {
predictions = c()
for (i in 1:100) {
input_vector <- data.frame(scaled_exchange_data$date)
input_vector <- data.frame(input_vector[((400 - order) + i) : ((400 + i) - 1), ])
nn_trial.prediction <- predict(nn_trial, input_vector)
predictions <- c(predictions, nn_trial.prediction)
}
print(predictions)
predictions_df <- data.frame(test[, 1], predictions)
#predictions_df <- head(predictions_df, 100)
rmse_nn_trial <- round(rmse(test[, 2], predictions_df[, 2]), digits = 4)
mae_nn_trial <- round(mae(test[, 2], predictions_df[, 2]), digits = 4)
mape_nn_trial <- round(mape(test[, 2], predictions_df[, 2]), digits = 4)
return(c(rmse_nn_trial, mae_nn_trial, mape_nn_trial))
}
zzz <- perform_neuralnet_ar_change_two(104, 5)
perform_neuralnet_ar_change_two <- function(seed, order) {
predictions = c()
for (i in 1:100) {
input_vector <- data.frame(scaled_exchange_data$date)
input_vector <- data.frame(input_vector[((400 - order) + i) : ((400 + i) - 1), ])
nn_trial.prediction <- predict(nn_trial, input_vector)
predictions <- c(predictions, nn_trial.prediction)
}
print(predictions)
predictions_df <- data.frame(test[, 1], predictions)
#predictions_df <- head(predictions_df, 100)
rmse_nn_trial <- round(rmse(test[, 2], predictions_df[, 2]), digits = 4)
mae_nn_trial <- round(mae(test[, 2], predictions_df[, 2]), digits = 4)
mape_nn_trial <- round(mape(test[, 2], predictions_df[, 2]), digits = 4)
return(c(rmse_nn_trial, mae_nn_trial, mape_nn_trial))
}
zzz <- perform_neuralnet_ar_change_two(104, 1)
perform_neuralnet_ar_change_two <- function(seed, order) {
predictions = c()
for (i in 1:100) {
input_vector <- data.frame(scaled_exchange_data$date)
input_vector <- data.frame(input_vector[((400 - order) + i) : ((400 + i) - 1), ])
nn_trial.prediction <- predict(nn_trial, input_vector)
predictions <- c(predictions, nn_trial.prediction)
}
print(predictions)
predictions_df <- data.frame(test[, 1], predictions)
#predictions_df <- head(predictions_df, 100)
rmse_nn_trial <- round(rmse(test[, 2], predictions_df[, 2]), digits = 4)
mae_nn_trial <- round(mae(test[, 2], predictions_df[, 2]), digits = 4)
mape_nn_trial <- round(mape(test[, 2], predictions_df[, 2]), digits = 4)
return(c(rmse_nn_trial, mae_nn_trial, mape_nn_trial))
}
zzz <- perform_neuralnet_ar_change_two(104, 2)
perform_neuralnet_ar_change_two <- function(seed, order) {
predictions = c()
for (i in 1:100) {
input_vector <- data.frame(scaled_exchange_data$date)
input_vector <- data.frame(input_vector[((400 - order) + i) : ((400 + i) - 1), ])
print(input_vector)
nn_trial.prediction <- predict(nn_trial, input_vector)
predictions <- c(predictions, nn_trial.prediction)
}
predictions_df <- data.frame(test[, 1], predictions)
#predictions_df <- head(predictions_df, 100)
rmse_nn_trial <- round(rmse(test[, 2], predictions_df[, 2]), digits = 4)
mae_nn_trial <- round(mae(test[, 2], predictions_df[, 2]), digits = 4)
mape_nn_trial <- round(mape(test[, 2], predictions_df[, 2]), digits = 4)
return(c(rmse_nn_trial, mae_nn_trial, mape_nn_trial))
}
zzz <- perform_neuralnet_ar_change_two(104, 2)
perform_neuralnet_ar_change_two <- function(seed, order) {
predictions = c()
for (i in 1:100) {
input_vector <- scaled_exchange_data$date
input_vector <- input_vector[((400 - order) + i) : ((400 + i) - 1), ]
print(input_vector)
nn_trial.prediction <- predict(nn_trial, input_vector)
predictions <- c(predictions, nn_trial.prediction)
}
predictions_df <- data.frame(test[, 1], predictions)
#predictions_df <- head(predictions_df, 100)
rmse_nn_trial <- round(rmse(test[, 2], predictions_df[, 2]), digits = 4)
mae_nn_trial <- round(mae(test[, 2], predictions_df[, 2]), digits = 4)
mape_nn_trial <- round(mape(test[, 2], predictions_df[, 2]), digits = 4)
return(c(rmse_nn_trial, mae_nn_trial, mape_nn_trial))
}
zzz <- perform_neuralnet_ar_change_two(104, 2)
perform_neuralnet_ar_change_two <- function(seed, order) {
predictions = c()
for (i in 1:100) {
input_vector <- scaled_exchange_data$date
input_vector <- input_vector[((400 - order) + i) : ((400 + i) - 1)]
print(input_vector)
nn_trial.prediction <- predict(nn_trial, input_vector)
predictions <- c(predictions, nn_trial.prediction)
}
predictions_df <- data.frame(test[, 1], predictions)
#predictions_df <- head(predictions_df, 100)
rmse_nn_trial <- round(rmse(test[, 2], predictions_df[, 2]), digits = 4)
mae_nn_trial <- round(mae(test[, 2], predictions_df[, 2]), digits = 4)
mape_nn_trial <- round(mape(test[, 2], predictions_df[, 2]), digits = 4)
return(c(rmse_nn_trial, mae_nn_trial, mape_nn_trial))
}
zzz <- perform_neuralnet_ar_change_two(104, 2)
perform_neuralnet_ar_change_two <- function(seed, order) {
predictions = c()
for (i in 1:100) {
input_vector <- scaled_exchange_data$date
input_vector <- data.frame(input_vector[((400 - order) + i) : ((400 + i) - 1),])
print(input_vector)
nn_trial.prediction <- predict(nn_trial, input_vector)
predictions <- c(predictions, nn_trial.prediction)
}
predictions_df <- data.frame(test[, 1], predictions)
#predictions_df <- head(predictions_df, 100)
rmse_nn_trial <- round(rmse(test[, 2], predictions_df[, 2]), digits = 4)
mae_nn_trial <- round(mae(test[, 2], predictions_df[, 2]), digits = 4)
mape_nn_trial <- round(mape(test[, 2], predictions_df[, 2]), digits = 4)
return(c(rmse_nn_trial, mae_nn_trial, mape_nn_trial))
}
zzz <- perform_neuralnet_ar_change_two(104, 2)
perform_neuralnet_ar_change_two <- function(seed, order) {
predictions = c()
for (i in 1:100) {
input_vector <- scaled_exchange_data$date
print(input_vector)
input_vector <- data.frame(input_vector[((400 - order) + i) : ((400 + i) - 1),])
print(input_vector)
nn_trial.prediction <- predict(nn_trial, input_vector)
predictions <- c(predictions, nn_trial.prediction)
}
predictions_df <- data.frame(test[, 1], predictions)
#predictions_df <- head(predictions_df, 100)
rmse_nn_trial <- round(rmse(test[, 2], predictions_df[, 2]), digits = 4)
mae_nn_trial <- round(mae(test[, 2], predictions_df[, 2]), digits = 4)
mape_nn_trial <- round(mape(test[, 2], predictions_df[, 2]), digits = 4)
return(c(rmse_nn_trial, mae_nn_trial, mape_nn_trial))
}
zzz <- perform_neuralnet_ar_change_two(104, 2)
perform_neuralnet_ar_change_two <- function(seed, order) {
predictions = c()
for (i in 1:100) {
input_vector <- data.frame(scaled_exchange_data$date)
print(input_vector)
input_vector <- data.frame(input_vector[((400 - order) + i) : ((400 + i) - 1),])
print(input_vector)
nn_trial.prediction <- predict(nn_trial, input_vector)
predictions <- c(predictions, nn_trial.prediction)
}
predictions_df <- data.frame(test[, 1], predictions)
#predictions_df <- head(predictions_df, 100)
rmse_nn_trial <- round(rmse(test[, 2], predictions_df[, 2]), digits = 4)
mae_nn_trial <- round(mae(test[, 2], predictions_df[, 2]), digits = 4)
mape_nn_trial <- round(mape(test[, 2], predictions_df[, 2]), digits = 4)
return(c(rmse_nn_trial, mae_nn_trial, mape_nn_trial))
}
zzz <- perform_neuralnet_ar_change_two(104, 2)
print(train)
typeof(train)
View(train)
perform_neuralnet_ar_change_two <- function(seed, order) {
predictions = c()
for (i in 1:100) {
input_vector <- scaled_exchange_data$date
print(typeof(input_vector))
input_vector <- data.frame(input_vector[((400 - order) + i) : ((400 + i) - 1),])
print(input_vector)
nn_trial.prediction <- predict(nn_trial, input_vector)
predictions <- c(predictions, nn_trial.prediction)
}
predictions_df <- data.frame(test[, 1], predictions)
#predictions_df <- head(predictions_df, 100)
rmse_nn_trial <- round(rmse(test[, 2], predictions_df[, 2]), digits = 4)
mae_nn_trial <- round(mae(test[, 2], predictions_df[, 2]), digits = 4)
mape_nn_trial <- round(mape(test[, 2], predictions_df[, 2]), digits = 4)
return(c(rmse_nn_trial, mae_nn_trial, mape_nn_trial))
}
zzz <- perform_neuralnet_ar_change_two(104, 2)
perform_neuralnet_ar_change_two <- function(seed, order) {
predictions = c()
for (i in 1:100) {
input_vector <- as.list(scaled_exchange_data$date)
print(typeof(input_vector))
input_vector <- data.frame(input_vector[((400 - order) + i) : ((400 + i) - 1),])
print(input_vector)
nn_trial.prediction <- predict(nn_trial, input_vector)
predictions <- c(predictions, nn_trial.prediction)
}
predictions_df <- data.frame(test[, 1], predictions)
#predictions_df <- head(predictions_df, 100)
rmse_nn_trial <- round(rmse(test[, 2], predictions_df[, 2]), digits = 4)
mae_nn_trial <- round(mae(test[, 2], predictions_df[, 2]), digits = 4)
mape_nn_trial <- round(mape(test[, 2], predictions_df[, 2]), digits = 4)
return(c(rmse_nn_trial, mae_nn_trial, mape_nn_trial))
}
zzz <- perform_neuralnet_ar_change_two(104, 2)
perform_neuralnet_ar_change_two <- function(seed, order) {
predictions = c()
for (i in 1:100) {
input_vector <- as.list(scaled_exchange_data$date)
print(typeof(input_vector))
input_vector <- as.list(input_vector[((400 - order) + i) : ((400 + i) - 1)])
print(input_vector)
nn_trial.prediction <- predict(nn_trial, input_vector)
predictions <- c(predictions, nn_trial.prediction)
}
predictions_df <- data.frame(test[, 1], predictions)
#predictions_df <- head(predictions_df, 100)
rmse_nn_trial <- round(rmse(test[, 2], predictions_df[, 2]), digits = 4)
mae_nn_trial <- round(mae(test[, 2], predictions_df[, 2]), digits = 4)
mape_nn_trial <- round(mape(test[, 2], predictions_df[, 2]), digits = 4)
return(c(rmse_nn_trial, mae_nn_trial, mape_nn_trial))
}
zzz <- perform_neuralnet_ar_change_two(104, 2)
perform_neuralnet_ar_change_two <- function(seed, order) {
predictions = c()
for (i in 1:100) {
input_vector <-as.data.frame(scaled_exchange_data$date)
print(typeof(input_vector))
input_vector <- as.data.frame(input_vector[((400 - order) + i) : ((400 + i) - 1), ])
print(input_vector)
nn_trial.prediction <- predict(nn_trial, input_vector)
predictions <- c(predictions, nn_trial.prediction)
}
predictions_df <- data.frame(test[, 1], predictions)
#predictions_df <- head(predictions_df, 100)
rmse_nn_trial <- round(rmse(test[, 2], predictions_df[, 2]), digits = 4)
mae_nn_trial <- round(mae(test[, 2], predictions_df[, 2]), digits = 4)
mape_nn_trial <- round(mape(test[, 2], predictions_df[, 2]), digits = 4)
return(c(rmse_nn_trial, mae_nn_trial, mape_nn_trial))
}
zzz <- perform_neuralnet_ar_change_two(104, 2)
perform_neuralnet_ar_change_two <- function(seed, order) {
predictions = c()
for (i in 1:100) {
input_vector <-as.data.frame(scaled_exchange_data$date)
input_vector <- as.data.frame(input_vector[((400 - order) + i) : ((400 + i) - 1), ])
nn_trial.prediction <- predict(nn_trial, input_vector)
predictions <- c(predictions, nn_trial.prediction)
}
predictions_df <- data.frame(test[, 1], predictions)
#predictions_df <- head(predictions_df, 100)
rmse_nn_trial <- round(rmse(test[, 2], predictions_df[, 2]), digits = 4)
mae_nn_trial <- round(mae(test[, 2], predictions_df[, 2]), digits = 4)
mape_nn_trial <- round(mape(test[, 2], predictions_df[, 2]), digits = 4)
return(c(rmse_nn_trial, mae_nn_trial, mape_nn_trial))
}
zzz <- perform_neuralnet_ar_change_two(104, 2)
perform_neuralnet_ar_change_two <- function(seed, order) {
predictions = c()
for (i in 1:100) {
input_vector <-as.data.frame(scaled_exchange_data$date)
input_vector <- as.data.frame(input_vector[((400 - order) + i) : ((400 + i) - 1), ])
nn_trial.prediction <- predict(nn_trial, input_vector)
predictions <- c(predictions, nn_trial.prediction)
}
print(predictions)
predictions_df <- data.frame(test[, 1], predictions)
#predictions_df <- head(predictions_df, 100)
rmse_nn_trial <- round(rmse(test[, 2], predictions_df[, 2]), digits = 4)
mae_nn_trial <- round(mae(test[, 2], predictions_df[, 2]), digits = 4)
mape_nn_trial <- round(mape(test[, 2], predictions_df[, 2]), digits = 4)
return(c(rmse_nn_trial, mae_nn_trial, mape_nn_trial))
}
zzz <- perform_neuralnet_ar_change_two(104, 2)
perform_neuralnet_ar_change_two <- function(seed, order) {
predictions = c()
for (i in 1:100) {
input_vector <-as.data.frame(scaled_exchange_data$date)
input_vector <- as.data.frame(input_vector[((400 - order) + i) : ((400 + i) - 1), ])
nn_trial.prediction <- predict(nn_trial, input_vector)
predictions <- c(predictions, nn_trial.prediction)
}
predictions_df <- data.frame(test[, 1], predictions)
print(predictions_df)
#predictions_df <- head(predictions_df, 100)
rmse_nn_trial <- round(rmse(test[, 2], predictions_df[, 2]), digits = 4)
mae_nn_trial <- round(mae(test[, 2], predictions_df[, 2]), digits = 4)
mape_nn_trial <- round(mape(test[, 2], predictions_df[, 2]), digits = 4)
return(c(rmse_nn_trial, mae_nn_trial, mape_nn_trial))
}
zzz <- perform_neuralnet_ar_change_two(104, 2)
View(train)
