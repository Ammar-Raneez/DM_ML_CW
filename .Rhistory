#An outlier is a point below lower quartile and above upper quartile
upper_quartile <- quant[2] + 1.5*iqr
lower_quartile <- quant[1] - 1.5*iqr
#subset the data set, such that the outliers are filtered out
scaled_vehicle_data <- subset(
scaled_vehicle_data,
scaled_vehicle_data[c(-ncol(vehicle_data))][, outlier] > lower_quartile &
scaled_vehicle_data[c(-ncol(vehicle_data))][, outlier] < upper_quartile
)
}
#data set can now be split into input and output
scaled_vehicle_data_inputs <- scaled_vehicle_data[c(-ncol(vehicle_data))]
scaled_vehicle_data_output <- scaled_vehicle_data[c(ncol(vehicle_data))]
#plot box plot again to check whether outliers have been removed
boxplot(scaled_vehicle_data_inputs, las = 2, col = c("lightgreen", "lightblue"), ylab = "Normalized Values")
View(scaled_vehicle_data_output)
## KMEANS CLUSTER DEFINITION ##
#Manual
manual_cluster_size <- 4
#Elbow Method
fviz_nbclust(scaled_vehicle_data_inputs, kmeans, method = "wss") + labs(subtitle = "Elbow")
#Silhouette Method
fviz_nbclust(scaled_vehicle_data_inputs, kmeans, method = "silhouette") + labs(subtitle = "Silhouette")
#Gap statistic Method
fviz_nbclust(scaled_vehicle_data_inputs, kmeans, method = "gap_stat", verbose = F) + labs(subtitle = "Gap statistic")
## KMEANS ANALYSIS ##
#Manual
manual_kmean <- kmeans(scaled_vehicle_data_inputs, centers = manual_cluster_size)
clusplot(scaled_vehicle_data_inputs, manual_kmean$cluster, color = T, shade = T)
#Elbow
elbow_kmean <- kmeans(scaled_vehicle_data_inputs, centers = 3)
clusplot(scaled_vehicle_data_inputs, elbow_kmean$cluster, color = T, shade = T)
#Silhouette & Gap Stat
silhouette_gap_kmean <- kmeans(scaled_vehicle_data_inputs, centers = 2)
clusplot(scaled_vehicle_data_inputs, silhouette_gap_kmean$cluster, color = T, shade = T)
View(manual_kmean)
View(elbow_kmean)
View(scaled_vehicle_data_inputs)
View(elbow_kmean)
library(ggplot2)
library(cluster)
df <- iris
ggplot(df, aes(Petal.Length, Petal.Width)) + geom_point(aes(col=Species), size=4)
set.seed(101)
irisCluster <- kmeans(df[,1:4], center=3, nstart=20)
irisCluster
table(irisCluster$cluster, df$Species)
clusplot(iris, irisCluster$cluster, color=T, shade=T, labels=0, lines=0)
#Elbow Method for optimal cluster number selection
tot.withinss <- vector(mode="character", length=10)
manual_kmean
plot(manual_kmean, type = "n")
plot(manual_kmean$centers, pch = 2, col = "green")
text(manual_kmean$centers)
library(ggplot2)
## KMEANS ANALYSIS ##
ggplot(scaled_vehicle_data_inputs, aes(Rad.Ra, Pr.Axis.Ra)) + geom_point(aes(col=Species))
View(scaled_vehicle_data_inputs)
View(scaled_vehicle_data_output)
## KMEANS ANALYSIS ##
ggplot(scaled_vehicle_data, aes(Rad.Ra, Pr.Axis.Ra)) + geom_point(aes(col=Class))
#Manual
manual_kmean <- kmeans(scaled_vehicle_data, centers = manual_cluster_size)
clusplot(scaled_vehicle_data, manual_kmean$cluster, color = T, shade = T)
clusplot(scaled_vehicle_data, manual_kmean$cluster, color = T, shade = T, geom_point(aes(col=class())))
clusplot(scaled_vehicle_data, manual_kmean$cluster, color = T, shade = T, geom_point(aes(col=class))
clusplot(scaled_vehicle_data, manual_kmean$cluster, color = T, shade = T, geom_point(aes(col=class)))
clusplot(scaled_vehicle_data, manual_kmean$cluster, color = T, shade = T, geom_point(aes(col=Class)))
clusplot(scaled_vehicle_data, elbow_kmean$cluster, color = T, shade = T)
clusplot(scaled_vehicle_data, silhouette_gap_kmean$cluster, color = T, shade = T)
clusplot(scaled_vehicle_data, manual_kmean$cluster, color = T, shade = T, labels = Class)
clusplot(scaled_vehicle_data, manual_kmean$cluster, color = T, shade = T, labels = "Class")
clusplot(scaled_vehicle_data, manual_kmean$cluster, color = T, shade = T, labels = 5)
clusplot(scaled_vehicle_data, manual_kmean$cluster, color = T, shade = T, labels = 3)
clusplot(scaled_vehicle_data, manual_kmean$cluster, color = T, shade = T, labels = 1)
clusplot(scaled_vehicle_data, manual_kmean$cluster, color = T, shade = T, labels = 4)
clusplot(scaled_vehicle_data, elbow_kmean$cluster, color = T, shade = T, labels = 4)
clusplot(scaled_vehicle_data, silhouette_gap_kmean$cluster, color = T, shade = T, labels = 4)
library(readxl)
library(factoextra)
library(NbClust)
library(ggplot2)
#read in the data
vehicle_data <- read_excel("../../vehicles.xlsx")
#remove samples column due to it only being a counter
vehicle_data <- vehicle_data[c(-1)]
#data type
class(vehicle_data)
#any missing values?
sum(is.na(vehicle_data))
## DATA PREPROCESSING SECTION ##
#normalize the input features
scaled_vehicle_data <- apply(vehicle_data[-c(ncol(vehicle_data))], 2, scale)
#bind the class column back into the normalized data set
scaled_vehicle_data <- cbind(scaled_vehicle_data, vehicle_data[c(ncol(vehicle_data))])
#visualize outliers of data set
boxplot(scaled_vehicle_data[-c(ncol(vehicle_data))], las = 2, col = c("lightgreen", "lightblue"), ylab = "Normalized Values")
#Based on box plot, following columns have outliers
have_outliers <- c("Rad.Ra", "Pr.Axis.Ra", "Max.L.Ra", "Pr.Axis.Rect", "Sc.Var.Maxis", "Sc.Var.maxis", "Skew.Maxis", "Skew.maxis", "Kurt.maxis")
#loop through all the columns that have outliers
for (outlier in have_outliers) {
number_of_rows = nrow(scaled_vehicle_data)
#get quantile values - 25th and 75th percentiles
quant <- quantile(scaled_vehicle_data[, outlier], probs = c(0.25, 0.75))
#calculate IQR for the respective columns
iqr <- IQR(scaled_vehicle_data[1:number_of_rows, outlier])
#An outlier is a point below lower quartile and above upper quartile
upper_quartile <- quant[2] + 1.5*iqr
lower_quartile <- quant[1] - 1.5*iqr
#subset the data set, such that the outliers are filtered out
scaled_vehicle_data <- subset(
scaled_vehicle_data,
scaled_vehicle_data[c(-ncol(vehicle_data))][, outlier] > lower_quartile &
scaled_vehicle_data[c(-ncol(vehicle_data))][, outlier] < upper_quartile
)
}
#data set can now be split into input and output
scaled_vehicle_data_inputs <- scaled_vehicle_data[c(-ncol(vehicle_data))]
scaled_vehicle_data_output <- scaled_vehicle_data[c(ncol(vehicle_data))]
#plot box plot again to check whether outliers have been removed
boxplot(scaled_vehicle_data_inputs, las = 2, col = c("lightgreen", "lightblue"), ylab = "Normalized Values")
## KMEANS CLUSTER DEFINITION ##
#Manual
manual_cluster_size <- 4
#Elbow Method
fviz_nbclust(scaled_vehicle_data_inputs, kmeans, method = "wss") + labs(subtitle = "Elbow")
#Silhouette Method
fviz_nbclust(scaled_vehicle_data_inputs, kmeans, method = "silhouette") + labs(subtitle = "Silhouette")
#Gap statistic Method
fviz_nbclust(scaled_vehicle_data_inputs, kmeans, method = "gap_stat", verbose = F) + labs(subtitle = "Gap statistic")
## KMEANS ANALYSIS ##
#Manual
manual_kmean <- kmeans(scaled_vehicle_data_inputs, centers = manual_cluster_size)
clusplot(scaled_vehicle_data, manual_kmean$cluster, color = T, shade = T, labels = 4)
table(scaled_vehicle_data_output, manual_kmean$cluster)
View(manual_kmean)
length(scaled_vehicle_data_output)
length(manual_kmean$cluster)
View(scaled_vehicle_data_output)
table(scaled_vehicle_data_output$Class, manual_kmean$cluster)
#Elbow
elbow_kmean <- kmeans(scaled_vehicle_data_inputs, centers = 3)
clusplot(scaled_vehicle_data, elbow_kmean$cluster, color = T, shade = T, labels = 4)
#Silhouette & Gap Stat
silhouette_gap_kmean <- kmeans(scaled_vehicle_data_inputs, centers = 2)
clusplot(scaled_vehicle_data, silhouette_gap_kmean$cluster, color = T, shade = T, labels = 4)
comparison_table_manual <- table(scaled_vehicle_data_output$Class, manual_kmean$cluster)
#Elbow
elbow_kmean <- kmeans(scaled_vehicle_data_inputs, centers = 3)
clusplot(scaled_vehicle_data, elbow_kmean$cluster, color = T, shade = T, labels = 4)
comparison_table_elbow <- table(scaled_vehicle_data_output$Class, elbow_kmean$cluster)
#Silhouette & Gap Stat
silhouette_gap_kmean <- kmeans(scaled_vehicle_data_inputs, centers = 2)
clusplot(scaled_vehicle_data, silhouette_gap_kmean$cluster, color = T, shade = T, labels = 4)
comparison_table_elbow <- table(scaled_vehicle_data_output$Class, silhouette_gap_kmean$cluster)
comparison_table_manual
comparison_table_elbow
#Elbow
elbow_kmean <- kmeans(scaled_vehicle_data_inputs, centers = 3)
clusplot(scaled_vehicle_data, elbow_kmean$cluster, color = T, shade = T, labels = 4)
comparison_table_elbow <- table(scaled_vehicle_data_output$Class, elbow_kmean$cluster)
comparison_table_manual
comparison_table_elbow
comparison_table_silhouette_gap
comparison_table_silhouette_gap <- table(scaled_vehicle_data_output$Class, silhouette_gap_kmean$cluster)
comparison_table_silhouette_gap
plot(manual_kmean$cluster)
plot(manual_kmean$cluster, col = scaled_vehicle_data$Class)
comparison_table_silhouette_gap <- table(silhouette_gap_kmean$cluster, scaled_vehicle_data_output$Class)
comparison_table_silhouette_gap
comparison_table_manual <- table(manual_kmean$cluster, scaled_vehicle_data_output$Class)
#Elbow
elbow_kmean <- kmeans(scaled_vehicle_data_inputs, centers = 3)
clusplot(scaled_vehicle_data, elbow_kmean$cluster, color = T, shade = T, labels = 4)
comparison_table_elbow <- table(elbow_kmean$cluster, scaled_vehicle_data_output$Class)
#Silhouette & Gap Stat
silhouette_gap_kmean <- kmeans(scaled_vehicle_data_inputs, centers = 2)
clusplot(scaled_vehicle_data, silhouette_gap_kmean$cluster, color = T, shade = T, labels = 4)
comparison_table_silhouette_gap <- table(silhouette_gap_kmean$cluster, scaled_vehicle_data_output$Class)
comparison_table_manual
comparison_table_elbow
comparison_table_silhouette_gap
library(readxl)
library(factoextra)
library(NbClust)
library(ggplot2)
#read in the data
vehicle_data <- read_excel("../../vehicles.xlsx")
#remove samples column due to it only being a counter
vehicle_data <- vehicle_data[c(-1)]
#data type
class(vehicle_data)
#any missing values?
sum(is.na(vehicle_data))
## DATA PREPROCESSING SECTION ##
#normalize the input features
scaled_vehicle_data <- apply(vehicle_data[-c(ncol(vehicle_data))], 2, scale)
#bind the class column back into the normalized data set
scaled_vehicle_data <- cbind(scaled_vehicle_data, vehicle_data[c(ncol(vehicle_data))])
#visualize outliers of data set
boxplot(scaled_vehicle_data[-c(ncol(vehicle_data))], las = 2, col = c("lightgreen", "lightblue"), ylab = "Normalized Values")
#Based on box plot, following columns have outliers
have_outliers <- c("Rad.Ra", "Pr.Axis.Ra", "Max.L.Ra", "Pr.Axis.Rect", "Sc.Var.Maxis", "Sc.Var.maxis", "Skew.Maxis", "Skew.maxis", "Kurt.maxis")
#loop through all the columns that have outliers
for (outlier in have_outliers) {
number_of_rows = nrow(scaled_vehicle_data)
#get quantile values - 25th and 75th percentiles
quant <- quantile(scaled_vehicle_data[, outlier], probs = c(0.25, 0.75))
#calculate IQR for the respective columns
iqr <- IQR(scaled_vehicle_data[1:number_of_rows, outlier])
#An outlier is a point below lower quartile and above upper quartile
upper_quartile <- quant[2] + 1.5*iqr
lower_quartile <- quant[1] - 1.5*iqr
#subset the data set, such that the outliers are filtered out
scaled_vehicle_data <- subset(
scaled_vehicle_data,
scaled_vehicle_data[c(-ncol(vehicle_data))][, outlier] > lower_quartile &
scaled_vehicle_data[c(-ncol(vehicle_data))][, outlier] < upper_quartile
)
}
#data set can now be split into input and output
scaled_vehicle_data_inputs <- scaled_vehicle_data[c(-ncol(vehicle_data))]
scaled_vehicle_data_output <- scaled_vehicle_data[c(ncol(vehicle_data))]
#plot box plot again to check whether outliers have been removed
boxplot(scaled_vehicle_data_inputs, las = 2, col = c("lightgreen", "lightblue"), ylab = "Normalized Values")
## KMEANS CLUSTER DEFINITION ##
#Manual
manual_cluster_size <- 4
#Elbow Method
fviz_nbclust(scaled_vehicle_data_inputs, kmeans, method = "wss") + labs(subtitle = "Elbow")
#Silhouette Method
fviz_nbclust(scaled_vehicle_data_inputs, kmeans, method = "silhouette") + labs(subtitle = "Silhouette")
#Gap statistic Method
fviz_nbclust(scaled_vehicle_data_inputs, kmeans, method = "gap_stat", verbose = F) + labs(subtitle = "Gap statistic")
## KMEANS ANALYSIS ##
set.seed(101)
#Manual
manual_kmean <- kmeans(scaled_vehicle_data_inputs, centers = manual_cluster_size, nstart = 50)
clusplot(scaled_vehicle_data, manual_kmean$cluster, color = T, shade = T, labels = 4)
comparison_table_manual <- table(manual_kmean$cluster, scaled_vehicle_data_output$Class)
#Elbow
elbow_kmean <- kmeans(scaled_vehicle_data_inputs, centers = 3, nstart = 50)
clusplot(scaled_vehicle_data, elbow_kmean$cluster, color = T, shade = T, labels = 4)
comparison_table_elbow <- table(elbow_kmean$cluster, scaled_vehicle_data_output$Class)
#Silhouette & Gap Stat
silhouette_gap_kmean <- kmeans(scaled_vehicle_data_inputs, centers = 2, nstart = 50)
clusplot(scaled_vehicle_data, silhouette_gap_kmean$cluster, color = T, shade = T, labels = 4)
comparison_table_silhouette_gap <- table(silhouette_gap_kmean$cluster, scaled_vehicle_data_output$Class)
comparison_table_elbow
View(scaled_vehicle_data)
View(scaled_vehicle_data_inputs)
View(scaled_vehicle_data_output)
#bind predicted clusters
scaled_vehicle_data_manualBound <- cbind(scaled_vehicle_data, cluster = manual_kmean$cluster)
scaled_vehicle_data_elbowBound <- cbind(scaled_vehicle_data, cluster = elbow_kmean$cluster)
scaled_vehicle_data_SGBound <- cbind(scaled_vehicle_data, cluster = silhouette_gap_kmean$cluster)
View(scaled_vehicle_data_elbowBound)
View(scaled_vehicle_data_elbowBound)
View(elbow_kmean)
elbow_kmean[["centers"]]
comparison_table_manual
confusionMatrix()
install.packages('Rcpp')
install.packages('Rcpp')
library(Rcpp)
install.packages('e1071')
install.packages('caret')
library(caret)
manual_cm <- confusionMatrix(manual_kmean$cluster, scaled_vehicle_data_output$Class)
manual_cm <- confusionMatrix(as.factor(manual_kmean$cluster), as.factor(scaled_vehicle_data_output$Class))
manual_kmean$cluster
scaled_vehicle_data_output$Class
manual_cm <- confusionMatrix(manual_kmean$cluster, as.factor(scaled_vehicle_data_output$Class))
table(factor(manual_kmean$cluster, levels=min(scaled_vehicle_data_output$Class):max(scaled_vehicle_data_output$Class)),
factor(scaled_vehicle_data_output$Class, levels=min(scaled_vehicle_data_output$Class):max(scaled_vehicle_data_output$Class)))
comparison_table_manual
comparison_table_elbow
comparison_table_silhouette_gap
#Elbow
elbow_kmean <- kmeans(scaled_vehicle_data_inputs, centers = 4, nstart = 50)
clusplot(scaled_vehicle_data, elbow_kmean$cluster, color = T, shade = T, labels = 4)
library(readxl)
library(factoextra)
library(NbClust)
library(caret)
library(ggplot2)
#read in the data
vehicle_data <- read_excel("../../vehicles.xlsx")
#remove samples column due to it only being a counter
vehicle_data <- vehicle_data[c(-1)]
#data type
class(vehicle_data)
#any missing values?
sum(is.na(vehicle_data))
## DATA PREPROCESSING SECTION ##
#normalize the input features
scaled_vehicle_data <- apply(vehicle_data[-c(ncol(vehicle_data))], 2, scale)
#bind the class column back into the normalized data set
scaled_vehicle_data <- cbind(scaled_vehicle_data, vehicle_data[c(ncol(vehicle_data))])
#visualize outliers of data set
boxplot(scaled_vehicle_data[-c(ncol(vehicle_data))], las = 2, col = c("lightgreen", "lightblue"), ylab = "Normalized Values")
#Based on box plot, following columns have outliers
have_outliers <- c("Rad.Ra", "Pr.Axis.Ra", "Max.L.Ra", "Pr.Axis.Rect", "Sc.Var.Maxis", "Sc.Var.maxis", "Skew.Maxis", "Skew.maxis", "Kurt.maxis")
#loop through all the columns that have outliers
for (outlier in have_outliers) {
number_of_rows = nrow(scaled_vehicle_data)
#get quantile values - 25th and 75th percentiles
quant <- quantile(scaled_vehicle_data[, outlier], probs = c(0.25, 0.75))
#calculate IQR for the respective columns
iqr <- IQR(scaled_vehicle_data[1:number_of_rows, outlier])
#An outlier is a point below lower quartile and above upper quartile
upper_quartile <- quant[2] + 1.5*iqr
lower_quartile <- quant[1] - 1.5*iqr
#subset the data set, such that the outliers are filtered out
scaled_vehicle_data <- subset(
scaled_vehicle_data,
scaled_vehicle_data[c(-ncol(vehicle_data))][, outlier] > lower_quartile &
scaled_vehicle_data[c(-ncol(vehicle_data))][, outlier] < upper_quartile
)
}
#data set can now be split into input and output
scaled_vehicle_data_inputs <- scaled_vehicle_data[c(-ncol(vehicle_data))]
scaled_vehicle_data_output <- scaled_vehicle_data[c(ncol(vehicle_data))]
#plot box plot again to check whether outliers have been removed
boxplot(scaled_vehicle_data_inputs, las = 2, col = c("lightgreen", "lightblue"), ylab = "Normalized Values")
## KMEANS CLUSTER DEFINITION ##
#Manual
manual_cluster_size <- 4
#Elbow Method
fviz_nbclust(scaled_vehicle_data_inputs, kmeans, method = "wss") + labs(subtitle = "Elbow")
#Gap statistic Method
fviz_nbclust(scaled_vehicle_data_inputs, kmeans, method = "gap_stat", verbose = F) + labs(subtitle = "Gap statistic")
#Manual
manual_kmean <- kmeans(scaled_vehicle_data_inputs, centers = manual_cluster_size, nstart = 50)
clusplot(scaled_vehicle_data, manual_kmean$cluster, color = T, shade = T, labels = 4)
comparison_table_manual <- table(manual_kmean$cluster, scaled_vehicle_data_output$Class)
#Silhouette Method
fviz_nbclust(scaled_vehicle_data_inputs, kmeans, method = "silhouette") + labs(subtitle = "Silhouette")
clusplot(scaled_vehicle_data, elbow_kmean$cluster, color = T, shade = T, labels = 4)
## KMEANS ANALYSIS ##
set.seed(101)
#Elbow
elbow_kmean <- kmeans(scaled_vehicle_data_inputs, centers = 4, nstart = 50)
comparison_table_elbow <- table(elbow_kmean$cluster, scaled_vehicle_data_output$Class)
#Silhouette & Gap Stat
silhouette_gap_kmean <- kmeans(scaled_vehicle_data_inputs, centers = 2, nstart = 50)
clusplot(scaled_vehicle_data, silhouette_gap_kmean$cluster, color = T, shade = T, labels = 4)
comparison_table_silhouette_gap <- table(silhouette_gap_kmean$cluster, scaled_vehicle_data_output$Class)
library(cluster)
clusplot(scaled_vehicle_data, manual_kmean$cluster, color = T, shade = T, labels = 4)
comparison_table_manual <- table(manual_kmean$cluster, scaled_vehicle_data_output$Class)
#Elbow
elbow_kmean <- kmeans(scaled_vehicle_data_inputs, centers = 3, nstart = 50)
clusplot(scaled_vehicle_data, elbow_kmean$cluster, color = T, shade = T, labels = 4)
#Elbow
elbow_kmean <- kmeans(scaled_vehicle_data_inputs, centers = 4, nstart = 50)
clusplot(scaled_vehicle_data, elbow_kmean$cluster, color = T, shade = T, labels = 4)
comparison_table_elbow <- table(elbow_kmean$cluster, scaled_vehicle_data_output$Class)
#Silhouette & Gap Stat
silhouette_gap_kmean <- kmeans(scaled_vehicle_data_inputs, centers = 2, nstart = 50)
clusplot(scaled_vehicle_data, silhouette_gap_kmean$cluster, color = T, shade = T, labels = 4)
comparison_table_silhouette_gap <- table(silhouette_gap_kmean$cluster, scaled_vehicle_data_output$Class)
#bind predicted clusters
scaled_vehicle_data_manualBound <- cbind(scaled_vehicle_data, cluster = manual_kmean$cluster)
scaled_vehicle_data_elbowBound <- cbind(scaled_vehicle_data, cluster = elbow_kmean$cluster)
scaled_vehicle_data_SGBound <- cbind(scaled_vehicle_data, cluster = silhouette_gap_kmean$cluster)
comparison_table_manual
comparison_table_elbow
comparison_table_silhouette_gap
library(ggplot2)
library(cluster)
df <- iris
ggplot(df, aes(Petal.Length, Petal.Width)) + geom_point(aes(col=Species), size=4)
set.seed(101)
irisCluster <- kmeans(df[,1:4], center=3, nstart=20)
irisCluster
table(irisCluster$cluster, df$Species)
#
clusplot(iris, irisCluster$cluster, color=T, shade=T, labels=0, lines=0)
#
clusplot(iris, irisCluster$cluster, color=T, shade=T, labels=4, lines=0)
#Elbow Method for optimal cluster number selection
tot.withinss <- vector(mode="character", length=10)
for (i in 1:10){
irisCluster <- kmeans(df[,1:4], center=i, nstart=20)
tot.withinss[i] <- irisCluster$tot.withinss
}
tot.withinss
plot(1:10, tot.withinss, type="b", pch=19)
View(irisCluster)
View(df)
ggplot(df, aes(Petal.Length, Petal.Width)) + geom_point(aes(col=Species))
ggplot(df, aes(Petal.Length, Petal.Width)) + geom_point(aes(col=Species), size = 10)
ggplot(df, aes(Petal.Length, Petal.Width)) + geom_point(aes(col=Species), size = 3)
library(readxl)
library(factoextra)
library(NbClust)
library(caret)
library(ggplot2)
library(cluster)
#read in the data
vehicle_data <- read_excel("../../vehicles.xlsx")
#remove samples column due to it only being a counter
vehicle_data <- vehicle_data[c(-1)]
#data type
class(vehicle_data)
#any missing values?
sum(is.na(vehicle_data))
## DATA PREPROCESSING SECTION ##
#normalize the input features
scaled_vehicle_data <- apply(vehicle_data[-c(ncol(vehicle_data))], 2, scale)
#bind the class column back into the normalized data set
scaled_vehicle_data <- cbind(scaled_vehicle_data, vehicle_data[c(ncol(vehicle_data))])
#visualize outliers of data set
boxplot(scaled_vehicle_data[-c(ncol(vehicle_data))], las = 2, col = c("lightgreen", "lightblue"), ylab = "Normalized Values")
#Based on box plot, following columns have outliers
have_outliers <- c("Rad.Ra", "Pr.Axis.Ra", "Max.L.Ra", "Pr.Axis.Rect", "Sc.Var.Maxis", "Sc.Var.maxis", "Skew.Maxis", "Skew.maxis", "Kurt.maxis")
#loop through all the columns that have outliers
for (outlier in have_outliers) {
number_of_rows = nrow(scaled_vehicle_data)
#get quantile values - 25th and 75th percentiles
quant <- quantile(scaled_vehicle_data[, outlier], probs = c(0.25, 0.75))
#calculate IQR for the respective columns
iqr <- IQR(scaled_vehicle_data[1:number_of_rows, outlier])
#An outlier is a point below lower quartile and above upper quartile
upper_quartile <- quant[2] + 1.5*iqr
lower_quartile <- quant[1] - 1.5*iqr
#subset the data set, such that the outliers are filtered out
scaled_vehicle_data <- subset(
scaled_vehicle_data,
scaled_vehicle_data[c(-ncol(vehicle_data))][, outlier] > lower_quartile &
scaled_vehicle_data[c(-ncol(vehicle_data))][, outlier] < upper_quartile
)
}
#data set can now be split into input and output
scaled_vehicle_data_inputs <- scaled_vehicle_data[c(-ncol(vehicle_data))]
scaled_vehicle_data_output <- scaled_vehicle_data[c(ncol(vehicle_data))]
#plot box plot again to check whether outliers have been removed
boxplot(scaled_vehicle_data_inputs, las = 2, col = c("lightgreen", "lightblue"), ylab = "Normalized Values")
ggplot(scaled_vehicle_data, aes(Rad.Ra, Pr.Axis.Ra)) + geom_point(aes(col=Class), size = 3)
#Visualize data and classes
ggplot(scaled_vehicle_data, aes(Rad.Ra, Max.L.Ra)) + geom_point(aes(col=Class), size = 3)
#Visualize data and classes
ggplot(scaled_vehicle_data, aes(c("Rad.Ra", "Pr.Axis.Ra", "Max.L.Ra", "Pr.Axis.Rect", "Sc.Var.Maxis", "Sc.Var.maxis", "Skew.Maxis", "Skew.maxis", "Kurt.maxis"))) + geom_point(aes(col=Class), size = 3)
#Visualize data and classes
ggplot(scaled_vehicle_data, aes(Rad.Ra, Pr.Axis.Ra, Max.L.Ra, Pr.Axis.Rect) + geom_point(aes(col=Class), size = 3)
#Visualize data and classes
ggplot(scaled_vehicle_data, aes(Rad.Ra, Pr.Axis.Ra, Max.L.Ra, Pr.Axis.Rect) + geom_point(aes(col=Class), size = 3))
#Visualize data and classes
ggplot(scaled_vehicle_data, aes(Rad.Ra, Pr.Axis.Ra) + geom_point(aes(col=Class), size = 3))
#Visualize data and classes
ggplot(scaled_vehicle_data, aes(Rad.Ra, Pr.Axis.Ra) + geom_point(aes(col=Class), size = 3))
## DATA PREPROCESSING SECTION ##
#normalize the input features
scaled_vehicle_data <- apply(vehicle_data[-c(ncol(vehicle_data))], 2, scale)
#bind the class column back into the normalized data set
scaled_vehicle_data <- cbind(scaled_vehicle_data, vehicle_data[c(ncol(vehicle_data))])
#Visualize data and classes
ggplot(scaled_vehicle_data, aes(Rad.Ra, Pr.Axis.Ra) + geom_point(aes(col=Class), size = 3))
#Visualize data and classes
ggplot(scaled_vehicle_data, aes(Rad.Ra, Pr.Axis.Ra) + geom_point(aes(col=Class), size = 3))
library(readxl)
library(factoextra)
library(NbClust)
library(caret)
library(ggplot2)
library(cluster)
#read in the data
vehicle_data <- read_excel("../../vehicles.xlsx")
#remove samples column due to it only being a counter
vehicle_data <- vehicle_data[c(-1)]
#data type
class(vehicle_data)
#any missing values?
sum(is.na(vehicle_data))
## DATA PREPROCESSING SECTION ##
#normalize the input features
scaled_vehicle_data <- apply(vehicle_data[-c(ncol(vehicle_data))], 2, scale)
#bind the class column back into the normalized data set
scaled_vehicle_data <- cbind(scaled_vehicle_data, vehicle_data[c(ncol(vehicle_data))])
#visualize outliers of data set
boxplot(scaled_vehicle_data[-c(ncol(vehicle_data))], las = 2, col = c("lightgreen", "lightblue"), ylab = "Normalized Values")
#Based on box plot, following columns have outliers
have_outliers <- c("Rad.Ra", "Pr.Axis.Ra", "Max.L.Ra", "Pr.Axis.Rect", "Sc.Var.Maxis", "Sc.Var.maxis", "Skew.Maxis", "Skew.maxis", "Kurt.maxis")
#loop through all the columns that have outliers
for (outlier in have_outliers) {
number_of_rows = nrow(scaled_vehicle_data)
#get quantile values - 25th and 75th percentiles
quant <- quantile(scaled_vehicle_data[, outlier], probs = c(0.25, 0.75))
#calculate IQR for the respective columns
iqr <- IQR(scaled_vehicle_data[1:number_of_rows, outlier])
#An outlier is a point below lower quartile and above upper quartile
upper_quartile <- quant[2] + 1.5*iqr
lower_quartile <- quant[1] - 1.5*iqr
#subset the data set, such that the outliers are filtered out
scaled_vehicle_data <- subset(
scaled_vehicle_data,
scaled_vehicle_data[c(-ncol(vehicle_data))][, outlier] > lower_quartile &
scaled_vehicle_data[c(-ncol(vehicle_data))][, outlier] < upper_quartile
)
}
#data set can now be split into input and output
scaled_vehicle_data_inputs <- scaled_vehicle_data[c(-ncol(vehicle_data))]
scaled_vehicle_data_output <- scaled_vehicle_data[c(ncol(vehicle_data))]
#plot box plot again to check whether outliers have been removed
boxplot(scaled_vehicle_data_inputs, las = 2, col = c("lightgreen", "lightblue"), ylab = "Normalized Values")
#Visualize data and classes
ggplot(scaled_vehicle_data, aes(Rad.Ra, Pr.Axis.Ra) + geom_point(aes(col=Class), size = 3))
#Visualize data and classes
ggplot(scaled_vehicle_data, aes(Rad.Ra, Pr.Axis.Ra)) + geom_point(aes(col=Class), size = 3)
#Visualize data and classes
ggplot(scaled_vehicle_data, aes(Rad.Ra, Pr.Axis.Ra, Max.L.Ra)) + geom_point(aes(col=Class), size = 3)
